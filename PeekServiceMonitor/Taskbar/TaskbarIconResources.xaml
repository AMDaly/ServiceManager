<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:local="clr-namespace:PeekServiceMonitor.Controls"
                    xmlns:viewModel="clr-namespace:PeekServiceMonitor.ViewModel">

    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="Show Manager" Command="{Binding ShowMainWindowCommand}" />
        <MenuItem Header="Hide Manager" Command="{Binding HideMainWindowCommand}" />
        <Separator />
        <MenuItem Header="Quit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    d:DataContext="{d:DesignInstance viewModel:TaskbarIconViewModel, IsDesignTimeCreatable=False}"
                    
                    DoubleClickCommand="{Binding ShowMainWindowCommand}"
                    PopupActivation="LeftClick"
                    ContextMenu="{StaticResource SysTrayMenu}">
        
        <tb:TaskbarIcon.TrayToolTip>
            <local:TaskbarTooltip/>
        </tb:TaskbarIcon.TrayToolTip>

        <tb:TaskbarIcon.TrayPopup>
            <local:TaskbarPopup/>
        </tb:TaskbarIcon.TrayPopup>

        <!-- self-assign a data context (could also be done programmatically) -->
<!--        
        <tb:TaskbarIcon.DataContext>
            <local:TaskbarTooltip />
        </tb:TaskbarIcon.DataContext>
-->       
    </tb:TaskbarIcon>

</ResourceDictionary>